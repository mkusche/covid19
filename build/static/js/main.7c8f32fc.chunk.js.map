{"version":3,"sources":["Components/Covid19Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Covid19Dashboard","props","addDailyData","ajaxUrl","dataList","attributeName","dailyWorldData","JQuery","ajax","url","async","crossDomain","accept","success","result","csvdata","Papa","parse","i","data","length","isCompressRegion","regionName","found","find","element","attributes","region","lastvalue","j","value","increase","date","Date","parseInt","push","state","confirmedDaily","recoveredDaily","deathsDaily","currentData","totalConfirmed","totalActive","totalRecovered","totalDeaths","confirmedDailyWorld","recoveredDailyWorld","deathsDailyWorld","totalWorld","mapRegions","screen","width","storeVectorMap","component","vectorMap","instance","setTimeout","render","bounds","sizeGroups","groupSize","getData","that","newestFile","download_url","confirmed","recovered","deaths","active","lat","parseFloat","long","isNaN","coordinates","current","formatNumber","tooltipText","info","layer","type","dailyConfirmed","attribute","dailyRecovered","dailyDeaths","text","chartTooltipText","argument","toLocaleDateString","markerClick","e","target","center","zoomFactor","setState","applySettings","color","resetClick","summarizeGridText","getRegions","elements","dataSource","Fragment","singleColumnScreen","id","screenByWidth","this","height","window","innerHeight","ratio","row","col","colspan","className","onClick","title","ref","mapsData","hoverEnabled","customize","name","elementType","dataField","minSize","maxSize","opacity","enabled","customizeTooltip","colCount","readOnly","hoverStateEnabled","showBorders","showColumnLines","showRowLines","focusedRowEnabled","rowAlternationEnabled","keyExpr","mode","caption","dataType","defaultSortOrder","column","summaryType","customizeText","valueField","argumentField","barPadding","visible","days","overlappingBehavior","href","React","Component","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7c8f32fc.chunk.js","sourcesContent":["import 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport './Covid19Dashboard.css'\nimport React from 'react';\n\nimport { Button } from 'devextreme-react';\nimport ResponsiveBox, {\n  Row,\n  Col,\n  Item as ResponsiveBoxItem,\n  Location\n} from 'devextreme-react/responsive-box';\nimport VectorMap, {\n  Label,\n  Layer,\n  Tooltip\n} from 'devextreme-react/vector-map';\nimport DataGrid, { Column, Selection, Scrolling, Summary, TotalItem } from 'devextreme-react/data-grid';\nimport { TabPanel, Item as TabPanelItem } from \"devextreme-react/tab-panel\";\nimport { Chart,\n  Series,\n  Legend,\n  Size,\n  ArgumentAxis,\n  ValueAxis,\n  Label as ChartLabel,\n  Tooltip as ChartTooltip,\n  TickInterval \n} from 'devextreme-react/chart';\nimport Form, {\n  GroupItem,\n} from 'devextreme-react/form';\nimport { TextBox } from 'devextreme-react';\nimport { formatNumber } from 'devextreme/localization';\n\nimport JQuery from 'jquery';\nimport Papa from 'papaparse';\nimport * as mapsData from 'devextreme/dist/js/vectormap-data/world.js';\n\nconst worldRegionName = \"World\";\nconst mapcolor = '#D2D2D2';\n\nclass Covid19Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmedDaily: [],\n      recoveredDaily: [],\n      deathsDaily: [],\n      currentData: {\n        regionName: worldRegionName,\n        totalConfirmed: '0',\n        totalActive: '0',\n        totalRecovered: '0',\n        totalDeaths: '0',\n      }\n    };\n\n    this.confirmedDailyWorld = [];\n    this.recoveredDailyWorld = [];\n    this.deathsDailyWorld = [];\n    this.totalWorld = {\n      totalConfirmed: 0,\n      totalActive: 0,\n      totalRecovered: 0,\n      totalDeaths: 0,\n    };\n    this.mapRegions= [];\n\n\n    this.screen = (width) => width < 700 ? \"sm\" : \"lg\";\n  \n    this.storeVectorMap = (component) => {\n      this.vectorMap = component.instance;\n\n      //dirty hack to set the right size\n      setTimeout(() => this.vectorMap.render(), 300);\n      this.vectorMap.render();\n    };\n\n    this.bounds = [-180, 85, 180, -60];\n\n    this.sizeGroups = function () {\n      const groupSize = []\n\n      for (let i = 0; i < 11; i++) {\n        groupSize.push(i * 10)\n      }\n\n      for (let i = 1; i < 11; i++) {\n        groupSize.push(i * 100)\n      }\n\n      for (let i = 1; i < 101; i++) {\n        groupSize.push(i * 1000)\n      }\n\n      for (let i = 1; i < 101; i++) {\n        groupSize.push(i * 10000)\n      }\n\n      for (let i = 1; i < 201; i++) {\n        groupSize.push(i * 10000)\n      }\n\n      return groupSize\n    } ();\n\n    this.getData = () => {\n\n        var that = this;\n        const dataList = []\n        JQuery.ajax({\n          url: 'https://api.github.com/repos/CSSEGISandData/COVID-19/contents/csse_covid_19_data/csse_covid_19_daily_reports',\n          async: false,\n          crossDomain: true,\n          accept: {\n            'Access-Control-Allow-Origin': '*'\n          },\n          success: function (result) {\n            const newestFile = result[result.length - 2]\n            \n            JQuery.ajax({\n              url: newestFile.download_url,\n              async: false,\n              crossDomain: true,\n              accept: {\n                'Access-Control-Allow-Origin': '*'\n              },\n              success: function (result) {\n                const csvdata = Papa.parse(result)\n                for (var i = 1; i < csvdata.data.length - 1; i++) {\n                  const isCompressRegion = (csvdata.data[i][3] === 'US' || csvdata.data[i][3] === 'China' ||\n                                            csvdata.data[i][3] === 'Canada' || csvdata.data[i][3] === 'Australia' ||\n                                            csvdata.data[i][3] === 'Germany' || csvdata.data[i][3] === 'Italy' ||\n                                            csvdata.data[i][3] === 'Spain' || csvdata.data[i][3] === 'Brazil' ||\n                                            csvdata.data[i][3] === 'Mexico' || csvdata.data[i][3] === 'Chile' ||\n                                            csvdata.data[i][3] === 'Japan' || csvdata.data[i][3] === 'Colombia' ||\n                                            csvdata.data[i][3] === 'Peru' || csvdata.data[i][3] === 'Russia' || \n                                            csvdata.data[i][3] === 'Ukraine')\n  \n                  let regionName = ''\n  \n                  if (isCompressRegion) {\n                    regionName = csvdata.data[i][3]\n                  } else {\n                    regionName += csvdata.data[i][2] ? csvdata.data[i][2] + ', ' : ''\n                    regionName += csvdata.data[i][3]\n                  }\n  \n                  const found = dataList.find((element) => element.attributes.region === regionName && isCompressRegion)\n                  if (found) {\n                    found.attributes.confirmed += parseInt(csvdata.data[i][7])\n                    found.attributes.recovered += parseInt(csvdata.data[i][9])\n                    found.attributes.deaths += parseInt(csvdata.data[i][8])\n                    found.attributes.active += parseInt(csvdata.data[i][10])\n                  } else {\n                    let lat = parseFloat(csvdata.data[i][5])\n                    let long = parseFloat(csvdata.data[i][6])\n  \n                    if (regionName === 'US') {\n                      lat = 39.50\n                      long = -98.35\n                    }\n  \n                    if (regionName === 'Canada') {\n                      lat = 62.24\n                      long = -96.4835\n                    }\n  \n                    if (regionName === 'China') {\n                      lat = 35.33\n                      long = 103.23\n                    }\n                    if (regionName === 'Australia') {\n                      lat = -23.7\n                      long = 132.8\n                    }\n\n                    if (regionName === 'Germany') {\n                      lat = 51.2\n                      long = 10.5\n                    }\n\n                    if (regionName === 'Italy') {\n                      lat = 41.9\n                      long = 12.6\n                    }\n\n                    if (regionName === 'Spain') {\n                      lat = 40.5\n                      long = -3.7\n                    }\n\n                    if (regionName === 'Mexico') {\n                      lat = 23.6\n                      long = -102.5\n                    }\n\n                    if (regionName === 'Brazil') {\n                      lat = -14.2\n                      long = -51.9\n                    }\n\n                    if (regionName === 'Chile') {\n                      lat = -36.7\n                      long = -71.1\n                    }\n\n                    if (regionName === 'Chile') {\n                      lat = -36.7\n                      long = -71.1\n                    }\n\n                    if (regionName === 'Japan') {\n                      lat = 36.2\n                      long = 138.2\n                    }\n\n                    if (regionName === 'Colombia') {\n                      lat = 4.6\n                      long = -74.3\n                    }\n\n                    if (regionName === 'Peru') {\n                      lat = -9.2\n                      long = -75.0\n                    }\n\n                    if (regionName === 'Russia') {\n                      lat = 61.5\n                      long = 105.3\n                    }\n\n                    if (regionName === 'Ukraine') {\n                      lat = 48.4\n                      long = 31.2\n                    }\n  \n                    if (!isNaN(lat)) {\n                      dataList.push({\n                        coordinates: [long, lat],\n                        attributes: {\n                          region: regionName,\n                          confirmed: parseInt(csvdata.data[i][7]),\n                          recovered: parseInt(csvdata.data[i][9]),\n                          deaths: parseInt(csvdata.data[i][8]),\n                          active: parseInt(csvdata.data[i][10]),\n                          confirmedDaily: [],\n                          recoveredDaily: [],\n                          deathsDaily: []\n                        }\n                      })\n                    }\n                  }\n\n                  that.totalWorld.totalConfirmed +=  parseInt(csvdata.data[i][7]);\n                  that.totalWorld.totalActive += parseInt(csvdata.data[i][10]);\n                  that.totalWorld.totalRecovered += parseInt(csvdata.data[i][9]);\n                  that.totalWorld.totalDeaths += parseInt(csvdata.data[i][8]);\n                }\n\n                that.confirmedDailyWorld = addDailyData('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv', dataList, 'confirmedDaily')\n                that.recoveredDailyWorld = addDailyData('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv', dataList, 'recoveredDaily')\n                that.deathsDailyWorld = addDailyData('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv', dataList, 'deathsDaily')\n\n                for(var j=0; j < dataList.length; j++) {\n\n                  if(dataList[j].attributes.region === 'US') {\n                    dataList[j].attributes.region = 'United States';\n                  }\n\n                  if(dataList[j].attributes.region === 'Czechia') {\n                    dataList[j].attributes.region = 'Czech Rep.';\n                  }\n\n                  if(dataList[j].attributes.region === 'Korea, South') {\n                    dataList[j].attributes.region = 'Korea';\n                  }\n\n                  if(dataList[j].attributes.region === 'Taiwan*') {\n                    dataList[j].attributes.region = 'Taiwan';\n                  }\n                }\n                const current = that.state.currentData;\n                current.totalConfirmed = formatNumber(that.totalWorld.totalConfirmed);\n                current.totalActive = formatNumber(that.totalWorld.totalActive);\n                current.totalRecovered = formatNumber(that.totalWorld.totalRecovered);\n                current.totalDeaths = formatNumber(that.totalWorld.totalDeaths);\n\n                that.state.confirmedDaily = that.confirmedDailyWorld;\n                that.state.recoveredDaily = that.recoveredDailyWorld;\n                that.state.deathsDaily = that.deathsDailyWorld;\n                that.state.currentData = current;\n              }\n            })\n          }\n        })\n        return dataList;\n      };\n  \n    function addDailyData (ajaxUrl, dataList, attributeName) {\n      const dailyWorldData = [];\n\n      JQuery.ajax({\n        url: ajaxUrl,\n        async: false,\n        crossDomain: true,\n        accept: {\n          'Access-Control-Allow-Origin': '*'\n        },\n        success: function (result) {\n          const csvdata = Papa.parse(result)\n          for (var i = 1; i < csvdata.data.length - 1; i++) {\n            const isCompressRegion = (csvdata.data[i][1] === 'US' || csvdata.data[i][1] === 'China' ||\n                                  csvdata.data[i][1] === 'Canada' || csvdata.data[i][1] === 'Australia' ||\n                                  csvdata.data[i][3] === 'Germany' || csvdata.data[i][3] === 'Italy' ||\n                                  csvdata.data[i][3] === 'Spain' || csvdata.data[i][3] === 'Brazil' ||\n                                  csvdata.data[i][3] === 'Mexico' || csvdata.data[i][3] === 'Chile' ||\n                                  csvdata.data[i][3] === 'Japan' || csvdata.data[i][3] === 'Colombia' ||\n                                  csvdata.data[i][3] === 'Peru'|| csvdata.data[i][3] === 'Russia' || \n                                  csvdata.data[i][3] === 'Ukraine')\n    \n            var regionName = ''\n            if (isCompressRegion) {\n              regionName = csvdata.data[i][1]\n            } else {\n              regionName = csvdata.data[i][0] ? csvdata.data[i][0] + ', ' : ''\n              regionName += csvdata.data[i][1]\n            }\n            // eslint-disable-next-line no-loop-func\n            const found = dataList.find((element) => {\n              return element.attributes.region === regionName;\n            })\n            if (found) {\n              let lastvalue = 0\n              for (var j = 4; j < csvdata.data[i].length; j++) {\n                if (!found.attributes[attributeName][j - 4]) {\n                  found.attributes[attributeName][j - 4] = {}\n                }\n    \n                if (!found.attributes[attributeName][j - 4].value) {\n                  found.attributes[attributeName][j - 4].value = 0\n                }\n    \n                if (!found.attributes[attributeName][j - 4].increase) {\n                  found.attributes[attributeName][j - 4].increase = 0\n                }\n    \n                found.attributes[attributeName][j - 4].date = new Date(csvdata.data[0][j])\n                found.attributes[attributeName][j - 4].value += parseInt(csvdata.data[i][j])\n                found.attributes[attributeName][j - 4].increase += parseInt(csvdata.data[i][j]) - lastvalue\n              \n\n                if(i === 1) {\n                  dailyWorldData.push({ \n                    date: new Date(csvdata.data[0][j]) ,\n                    value: parseInt(csvdata.data[i][j]),\n                    increase: parseInt(csvdata.data[i][j]) - lastvalue\n                 });\n                } else {\n                  dailyWorldData[j - 4].value += parseInt(csvdata.data[i][j]);\n                  dailyWorldData[j - 4].increase += parseInt(csvdata.data[i][j]) - lastvalue\n                }\n\n                lastvalue = parseInt(csvdata.data[i][j]);\n              }\n            }\n          }\n        }\n      });\n      return dailyWorldData;\n    }\n\n    this.tooltipText = (info) => {\n      if (info.layer.type === 'marker') {\n        var dailyConfirmed = formatNumber(parseInt(info.attribute('confirmedDaily')[info.attribute('confirmedDaily').length - 1].increase));\n        var dailyRecovered = formatNumber(parseInt(info.attribute('recoveredDaily')[info.attribute('recoveredDaily').length - 1].increase));\n        var dailyDeaths = formatNumber(parseInt(info.attribute('deathsDaily')[info.attribute('deathsDaily').length - 1].increase));\n        return {\n          text: '<b>' + info.attribute('region') + '</b>' +\n                '<br />&nbsp;<br />Confirmed: ' + formatNumber(parseInt(info.attribute('confirmed'))) + ' (' + dailyConfirmed + ')' +\n                '<br />Recovered: ' + formatNumber(parseInt(info.attribute('recovered'))) + ' (' + dailyRecovered + ')' +\n                '<br />Active: ' + formatNumber(parseInt(info.attribute('active'))) +\n                '<br />Deaths: ' + formatNumber(parseInt(info.attribute('deaths'))) + ' (' + dailyDeaths + ')'\n        }\n      }\n    }\n    \n    this.chartTooltipText = (info) => {\n      return { text: info.argument.toLocaleDateString(\"en-US\") + ': ' + formatNumber(parseInt(info.value)) };\n    }\n\n    this.markerClick = (e) => {\n      if (e.target && e.target.layer.type === 'marker') {\n        e.component.center(e.target.coordinates()).zoomFactor(6);\n\n        const confirmedDaily = e.target.attribute('confirmedDaily');\n        const recoveredDaily = e.target.attribute('recoveredDaily');\n        const deathsDaily = e.target.attribute('deathsDaily');\n        \n        const current = this.state.currentData;\n        current.regionName = e.target.attribute('region');\n        current.totalConfirmed = formatNumber(parseInt(e.target.attribute('confirmed')));\n        current.totalActive = formatNumber(parseInt(e.target.attribute('active')));\n        current.totalRecovered = formatNumber(parseInt(e.target.attribute('recovered')));\n        current.totalDeaths= formatNumber(parseInt(e.target.attribute('deaths')));\n\n        this.setState({\n          confirmedDaily: confirmedDaily,\n          recoveredDaily: recoveredDaily,\n          deathsDaily: deathsDaily,\n          currentData: current\n        });\n\n        for(let i = 0; i < this.mapRegions.length; i++) {\n          if(e.target.attribute('region') === this.mapRegions[i].attribute('name')) {\n            this.mapRegions[i].applySettings({\n              color: '#FFAE42',\n            });\n          } else {\n            this.mapRegions[i].applySettings({\n              color: mapcolor,\n            });\n          }\n        }\n      }\n    }\n\n    this.resetClick = () => {\n      this.vectorMap.center(null);\n      this.vectorMap.zoomFactor(null);\n\n      const current = this.state.currentData;\n      current.regionName = worldRegionName;\n      current.totalConfirmed = formatNumber(this.totalWorld.totalConfirmed);\n      current.totalActive = formatNumber(this.totalWorld.totalActive);\n      current.totalRecovered = formatNumber(this.totalWorld.totalRecovered);\n      current.totalDeaths = formatNumber(this.totalWorld.totalDeaths);\n\n      this.setState({\n        confirmedDaily: this.confirmedDailyWorld,\n        recoveredDaily: this.recoveredDailyWorld,\n        deathsDaily: this.deathsDailyWorld,\n        currentData: current\n      });\n\n      for(let i = 0; i < this.mapRegions.length; i++) {\n        this.mapRegions[i].applySettings({\n          color: mapcolor,\n        });\n      }\n    };\n\n    this.summarizeGridText = (data) => {\n      return formatNumber(data.value);\n    };\n\n    this.getRegions = (elements) => {\n      this.mapRegions = elements;\n    }\n    this.dataSource = this.getData();\n  }\n  \n  render() {\n    return (\n      <React.Fragment>\n        <ResponsiveBox singleColumnScreen=\"sm\" id=\"responsice-box\" screenByWidth={this.screen} height={() => window.innerHeight}>\n          <Row ratio={3} />\n          <Row ratio={3} screen=\"xs\" />\n          <Row ratio={1} />\n\n          <Col ratio={2} />\n          <Col ratio={1} screen=\"lg\" />\n          <Col ratio={0} screen=\"lg\" />\n          <ResponsiveBoxItem>\n            <Location row={0} col={0} screen=\"lg\" />\n            <Location row={0} col={0} colspan={2} screen=\"sm\" />\n\n            <div className=\"dx-card responsive-paddings\">\n              <div id=\"region\"><h2 id=\"region-name\">{this.state.currentData.regionName}</h2></div>\n              <Button\n                id=\"reset\"\n                text=\"Reset\"\n                onClick={this.resetClick}/>\n              <TabPanel className=\"map-tab-panel\">\n                <TabPanelItem title=\"World Map\">\n                  <VectorMap\n                    id=\"vector-map\"\n                    ref={this.storeVectorMap}\n                    bounds={this.bounds}\n                    onClick={this.markerClick}\n                    >\n                    <Layer\n                      dataSource={mapsData.world}\n                      hoverEnabled={false}\n                      customize={this.getRegions}\n                      color={mapcolor}>\n                    </Layer>\n                    <Layer\n                      dataSource={this.dataSource}\n                      name=\"bubbles\"\n                      elementType=\"bubble\"\n                      dataField=\"confirmed\"\n                      minSize={5}\n                      maxSize={100}\n                      opacity=\"0.8\"\n                      sizeGroups={this.sizeGroups}\n                      color=\"#ff3300\">\n                      <Label enabled={false}></Label>\n                    </Layer>\n                    <Layer\n                      dataSource={this.dataSource}\n                      name=\"bubbles\"\n                      elementType=\"bubble\"\n                      dataField=\"recovered\"\n                      minSize={1}\n                      maxSize={100}\n                      opacity=\"0.8\"\n                      sizeGroups={this.sizeGroups}\n                      color=\"#149414\">\n                      <Label enabled={false}></Label>\n                    </Layer>\n                    <Layer\n                      dataSource={this.dataSource}\n                      name=\"bubbles\"\n                      elementType=\"bubble\"\n                      dataField=\"deaths\"\n                      minSize={1}\n                      maxSize={100}\n                      opacity=\"0.8\"\n                      sizeGroups={this.sizeGroups}\n                      color=\"#000000\">\n                      <Label enabled={false}></Label>\n                    </Layer>\n                    <Tooltip enabled={true}\n                      customizeTooltip={this.tooltipText} />\n                  </VectorMap>\n                  <Form id=\"totals-form\">\n                    <GroupItem colCount={2}>\n                      <GroupItem>\n                        <div className=\"dx-field\">\n                          <div className=\"dx-field-label\">Confirmed Cases</div>\n                          <div className=\"dx-field-value\">\n                            <TextBox readOnly={true}\n                              hoverStateEnabled={false}\n                              value={this.state.currentData.totalConfirmed } />\n                          </div>\n                        </div>\n                        <div className=\"dx-field\">\n                          <div className=\"dx-field-label\">Active Cases</div>\n                          <div className=\"dx-field-value\">\n                            <TextBox readOnly={true}\n                              hoverStateEnabled={false}\n                              value={this.state.currentData.totalActive } />\n                          </div>\n                        </div>\n                      </GroupItem>\n                      <GroupItem>\n                        <div className=\"dx-field\">\n                          <div className=\"dx-field-label\">Recovered Cases</div>\n                          <div className=\"dx-field-value\">\n                            <TextBox readOnly={true}\n                              hoverStateEnabled={false}\n                              value={this.state.currentData.totalRecovered } />\n                          </div>\n                        </div>\n                        <div className=\"dx-field\">\n                          <div className=\"dx-field-label\">Deaths</div>\n                          <div className=\"dx-field-value\">\n                            <TextBox readOnly={true}\n                              hoverStateEnabled={false}\n                              value={this.state.currentData.totalDeaths} />\n                          </div>\n                        </div>\n                      </GroupItem>\n                    </GroupItem>\n                  </Form>\n              </TabPanelItem>\n                <TabPanelItem title=\"Table\">\n                  <DataGrid\n                    id=\"gridContainer\"\n                    dataSource={this.dataSource}\n                    showBorders={false}\n                    showColumnLines={false}\n                    showRowLines={false}\n                    focusedRowEnabled={true}\n                    rowAlternationEnabled={true}\n                    height={window.innerHeight - 140}\n                    keyExpr=\"attributes.region\">\n                    <Selection mode=\"single\" />\n                    <Scrolling mode=\"virtual\" />\n                    <Column dataField=\"attributes.region\"  caption=\"Country\" />\n                    <Column dataField=\"attributes.confirmed\" width={100} caption=\"Confirmed\" dataType=\"number\" defaultSortOrder=\"desc\"/>\n                    <Column dataField=\"attributes.recovered\" width={100} caption=\"Recovered\" dataType=\"number\"/>\n                    <Column dataField=\"attributes.deaths\" width={100} caption=\"Deaths\" dataType=\"number\"/>\n                    <Column dataField=\"attributes.active\" width={100} caption=\"Active\" dataType=\"number\"/>\n                    <Summary>\n                      <TotalItem column=\"Confirmed\" summaryType=\"sum\" customizeText={this.summarizeGridText}/>\n                      <TotalItem column=\"Recovered\" summaryType=\"sum\" customizeText={this.summarizeGridText}/>\n                      <TotalItem column=\"Deaths\" summaryType=\"sum\" customizeText={this.summarizeGridText}/>\n                      <TotalItem column=\"Active\" summaryType=\"sum\" customizeText={this.summarizeGridText}/>\n                    </Summary>\n                  </DataGrid>\n                </TabPanelItem>\n              </TabPanel>\n            </div>\n          </ResponsiveBoxItem>\n\n          <ResponsiveBoxItem>\n            <Location row={0} col={1} screen=\"lg\" />\n            <Location row={1} col={0} colspan={2} screen=\"sm\" />\n\n            <div className=\"dx-card responsive-paddings\">\n              <TabPanel className=\"tab-panel\">\n                <TabPanelItem title=\"Confirmed Daily\">\n                  <Chart dataSource={this.state.confirmedDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"increase\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"bar\"\n                      color=\"#ff3300\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n                <TabPanelItem title=\"Recovered Daily\">\n                  <Chart dataSource={this.state.recoveredDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"increase\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"bar\"\n                      color=\"#149414\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n                <TabPanelItem title=\"Deaths Daily\">\n                  <Chart dataSource={this.state.deathsDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"increase\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"bar\"\n                      color=\"#000000\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n              </TabPanel>\n              <TabPanel className=\"tab-panel\">\n                <TabPanelItem title=\"Confirmed Linear\">\n                  <Chart dataSource={this.state.confirmedDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"value\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"spline\"\n                      color=\"#ff3300\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n                <TabPanelItem title=\"Recovered Linear\">\n                  <Chart dataSource={this.state.recoveredDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"value\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"spline\"\n                      color=\"#149414\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n                <TabPanelItem title=\"Deaths Linear\">\n                  <Chart dataSource={this.state.deathsDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"value\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"spline\"\n                      color=\"#000000\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n              </TabPanel>\n              <TabPanel className=\"tab-panel\">\n                <TabPanelItem title=\"Confirmed Log.\">\n                  <Chart dataSource={this.state.confirmedDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"value\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"spline\"\n                      color=\"#ff3300\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ValueAxis type=\"logarithmic\" />\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n                <TabPanelItem title=\"Recovered Log.\">\n                  <Chart dataSource={this.state.recoveredDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"value\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"spline\"\n                      color=\"#149414\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ValueAxis type=\"logarithmic\" />\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n                <TabPanelItem title=\"Deaths Log.\">\n                  <Chart dataSource={this.state.deathsDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"value\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"spline\"\n                      color=\"#000000\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ValueAxis type=\"logarithmic\" />\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n              </TabPanel>\n            </div>\n          </ResponsiveBoxItem>\n\n          <ResponsiveBoxItem>\n            <Location row={1} col={0} screen=\"lg\" />\n            <Location row={2} col={0} screen=\"sm\" />\n\n            <div>Datasource: <a href=\"https://github.com/CSSEGISandData/COVID-19\">Johns Hopkins CSSE</a></div>\n          </ResponsiveBoxItem>\n\n        </ResponsiveBox>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Covid19Dashboard;","import 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport './App.css'\nimport React from 'react';\nimport Covid19Dashboard from './Components/Covid19Dashboard'\nclass App extends React.Component {\n\n  \n  render() {\n    return (\n      <Covid19Dashboard />\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}