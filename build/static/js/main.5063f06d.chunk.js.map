{"version":3,"sources":["Components/Covid19Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Covid19Dashboard","props","state","confirmedDaily","recoveredDaily","deathsDaily","currentData","regionName","totalConfirmed","totalActive","totalRecovered","totalDeaths","confirmedDailyWorld","recoveredDailyWorld","deathsDailyWorld","totalWorld","mapRegions","screen","width","storeVectorMap","component","vectorMap","instance","setTimeout","render","bounds","sizeGroups","groupSize","i","push","getData","that","dataList","JQuery","ajax","url","async","success","countryList","forEach","country","coordinates","countryInfo","long","lat","attributes","region","regionISO2","iso2","regionISO3","iso3","confirmed","cases","confirmedToday","casesToday","recovered","recoveredToday","deaths","deathsToday","active","dailyData","dailyWorldConfirmed","dailyWorldRecovered","dailyWorldDeaths","countryDaily","province","find","element","toLowerCase","lastdayConfirmed","Object","keys","timeline","date","dateDate","Date","daily","dateStr","value","increase","dailyWorld","lastdayRecovered","lastdayDeaths","current","formatNumber","tooltipText","info","layer","type","dailyConfirmed","parseInt","attribute","length","dailyRecovered","dailyDeaths","text","chartTooltipText","argument","toLocaleDateString","markerClick","e","target","center","zoomFactor","setState","applySettings","color","resetClick","summarizeGridText","data","getRegions","elements","dataSource","Fragment","singleColumnScreen","id","screenByWidth","this","height","window","innerHeight","ratio","row","col","colspan","className","onClick","title","ref","mapsData","hoverEnabled","customize","name","elementType","dataField","minSize","maxSize","opacity","enabled","customizeTooltip","colCount","readOnly","hoverStateEnabled","showBorders","showColumnLines","showRowLines","focusedRowEnabled","rowAlternationEnabled","keyExpr","mode","caption","dataType","defaultSortOrder","column","summaryType","customizeText","valueField","argumentField","barPadding","visible","days","overlappingBehavior","href","React","Component","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5063f06d.chunk.js","sourcesContent":["import 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport './Covid19Dashboard.css'\nimport React from 'react';\n\nimport { Button } from 'devextreme-react';\nimport ResponsiveBox, {\n  Row,\n  Col,\n  Item as ResponsiveBoxItem,\n  Location\n} from 'devextreme-react/responsive-box';\nimport VectorMap, {\n  Label,\n  Layer,\n  Tooltip\n} from 'devextreme-react/vector-map';\nimport DataGrid, { Column, Selection, Scrolling, Summary, TotalItem } from 'devextreme-react/data-grid';\nimport { TabPanel, Item as TabPanelItem } from \"devextreme-react/tab-panel\";\nimport { Chart,\n  Series,\n  Legend,\n  Size,\n  ArgumentAxis,\n  ValueAxis,\n  Label as ChartLabel,\n  Tooltip as ChartTooltip,\n  TickInterval \n} from 'devextreme-react/chart';\nimport Form, {\n  GroupItem,\n} from 'devextreme-react/form';\nimport { TextBox } from 'devextreme-react';\nimport { formatNumber } from 'devextreme/localization';\n\nimport JQuery from 'jquery';\nimport * as mapsData from 'devextreme/dist/js/vectormap-data/world.js';\n\nconst worldRegionName = \"World\";\nconst mapcolor = '#D2D2D2';\n\nclass Covid19Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmedDaily: [],\n      recoveredDaily: [],\n      deathsDaily: [],\n      currentData: {\n        regionName: worldRegionName,\n        totalConfirmed: '0',\n        totalActive: '0',\n        totalRecovered: '0',\n        totalDeaths: '0',\n      }\n    };\n\n    this.confirmedDailyWorld = [];\n    this.recoveredDailyWorld = [];\n    this.deathsDailyWorld = [];\n    this.totalWorld = {\n      totalConfirmed: 0,\n      totalActive: 0,\n      totalRecovered: 0,\n      totalDeaths: 0,\n    };\n    this.mapRegions= [];\n\n\n    this.screen = (width) => width < 700 ? \"sm\" : \"lg\";\n  \n    this.storeVectorMap = (component) => {\n      this.vectorMap = component.instance;\n\n      //dirty hack to set the right size\n      setTimeout(() => this.vectorMap.render(), 300);\n      this.vectorMap.render();\n    };\n\n    this.bounds = [-180, 85, 180, -60];\n\n    this.sizeGroups = function () {\n      const groupSize = []\n\n      for (let i = 0; i < 11; i++) {\n        groupSize.push(i * 10)\n      }\n\n      for (let i = 1; i < 11; i++) {\n        groupSize.push(i * 100)\n      }\n\n      for (let i = 1; i < 101; i++) {\n        groupSize.push(i * 1000)\n      }\n\n      for (let i = 1; i < 101; i++) {\n        groupSize.push(i * 10000)\n      }\n\n      for (let i = 1; i < 201; i++) {\n        groupSize.push(i * 10000)\n      }\n\n      return groupSize\n    } ();\n\n    this.getData = () => {\n\n      var that = this;\n      const dataList = [];\n      JQuery.ajax({\n        url: 'https://corona.lmao.ninja/v2/countries',\n        async: false,\n        success: (countryList) => {\n          countryList.forEach((country) => {\n            dataList.push({\n              coordinates: [country.countryInfo.long, country.countryInfo.lat],\n              attributes: {\n                region: country.country,\n                regionISO2: country.countryInfo.iso2,\n                regionISO3: country.countryInfo.iso3,\n                confirmed: country.cases,\n                confirmedToday: country.casesToday,\n                recovered: country.recovered,\n                recoveredToday: country.recoveredToday,\n                deaths: country.deaths,\n                deathsToday: country.deathsToday,\n                active: country.active,\n                confirmedDaily: [],\n                recoveredDaily: [],\n                deathsDaily: []\n              }\n            });\n            that.totalWorld.totalConfirmed += country.cases;\n            that.totalWorld.totalActive += country.active;\n            that.totalWorld.totalRecovered += country.recovered;\n            that.totalWorld.totalDeaths += country.deaths;\n\n            \n          });\n\n          JQuery.ajax({\n            url: 'https://corona.lmao.ninja/v2/historical/?lastdays=all',\n            async: false,\n            success: (dailyData) => {\n              const dailyWorldConfirmed = [];\n              const dailyWorldRecovered = [];\n              const dailyWorldDeaths = [];\n\n              dailyData.forEach((countryDaily) => {\n                \n                //dirty clearing data\n                if(countryDaily.country === \"Cote d'Ivoire\") {\n                  countryDaily.country = \"Côte d'Ivoire\";\n                }\n\n                if(countryDaily.country === \"Holy See\") {\n                  countryDaily.country = \"Holy See (Vatican City State)\";\n                }\n                \n                if(countryDaily.country === \"Burma\") {\n                  countryDaily.country = \"Myanmar\";\n                }\n                if(countryDaily.country === \"Lao People\\\"s Democratic Republic\") {\n                  countryDaily.country = \"Lao People's Democratic Republic\";\n                }\n                \n                if(countryDaily.province === \"saint pierre and miquelon\") {\n                  countryDaily.province = \"Saint Pierre Miquelon\";\n                }\n\n                if(countryDaily.province === \"curacao\") {\n                  countryDaily.province = \"Curaçao\";\n                }\n\n                if(countryDaily.province === \"saint barthelemy\") {\n                  countryDaily.province = \"St. Barth\";\n                }\n\n                if(countryDaily.province === \"st martin\") {\n                  countryDaily.province = \"Saint Martin\";\n                }\n\n                if(countryDaily.province === \"reunion\") {\n                  countryDaily.province = \"Réunion\";\n                }\n\n                if(countryDaily.province === \"macau\") {\n                  countryDaily.province = \"Macao\";\n                }\n\n                var country = dataList.find((element) => {\n                  return (countryDaily.province != null && element.attributes.region.toLowerCase() === countryDaily.province.toLowerCase());\n                });\n\n                if(!country) {\n                  country = dataList.find((element) => {\n                    return (element.attributes.region.toLowerCase() === countryDaily.country.toLowerCase())\n                  });\n                }\n                \n                var lastdayConfirmed = 0;\n                const caseDates = Object.keys(countryDaily.timeline.cases)\n                caseDates.forEach((date) => {\n                  try {\n\n                    const dateDate = new Date(date);\n                    const daily = country.attributes.confirmedDaily.find((element) => {return element.dateStr === date});                   \n                    if(daily) {\n                      daily.value += countryDaily.timeline.cases[date];\n                      daily.increase += countryDaily.timeline.cases[date] - lastdayConfirmed;\n                    } else {\n                      country.attributes.confirmedDaily.push({\n                        date: dateDate,\n                        dateStr: date,\n                        value: countryDaily.timeline.cases[date],\n                        increase: countryDaily.timeline.cases[date] - lastdayConfirmed\n                      });\n                    }\n\n                    const dailyWorld = dailyWorldConfirmed.find((element) => {return element.dateStr === date});\n                    if (dailyWorld) {\n                      dailyWorld.value += countryDaily.timeline.cases[date];\n                      dailyWorld.increase += countryDaily.timeline.cases[date] - lastdayConfirmed;\n                    } else {\n                      dailyWorldConfirmed.push({ \n                        date: dateDate,\n                        dateStr: date,\n                        value: countryDaily.timeline.cases[date],\n                        increase: countryDaily.timeline.cases[date] - lastdayConfirmed\n                     });\n                    }\n\n                  } catch { }\n\n                  lastdayConfirmed = countryDaily.timeline.cases[date]\n                });\n\n                var lastdayRecovered = 0;\n                const recoveredDates = Object.keys(countryDaily.timeline.recovered)\n                recoveredDates.forEach((date) => {\n                  try {\n\n                    const dateDate = new Date(date);\n                    const daily = country.attributes.recoveredDaily.find((element) => {return element.dateStr === date});\n                    if(daily) {\n                      daily.value += countryDaily.timeline.recovered[date];\n                      daily.increase += countryDaily.timeline.recovered[date] - lastdayRecovered;\n                    } else {\n                      country.attributes.recoveredDaily.push({\n                        date: dateDate,\n                        dateStr: date,\n                        value: countryDaily.timeline.recovered[date],\n                        increase:  countryDaily.timeline.recovered[date] - lastdayRecovered\n                      });\n                    }\n\n                    const dailyWorld = dailyWorldRecovered.find((element) => {return element.dateStr === date});\n                    if (dailyWorld) {\n                      dailyWorld.value += countryDaily.timeline.recovered[date];\n                      dailyWorld.increase += countryDaily.timeline.recovered[date] - lastdayRecovered;\n                    } else {\n                      dailyWorldRecovered.push({ \n                        date: dateDate,\n                        dateStr: date,\n                        value: countryDaily.timeline.recovered[date],\n                        increase: countryDaily.timeline.recovered[date] - lastdayRecovered\n                     });\n                    }\n\n                  } catch { }\n\n                  lastdayRecovered = countryDaily.timeline.recovered[date]\n                });\n\n                var lastdayDeaths = 0;\n                const deathsDates = Object.keys(countryDaily.timeline.deaths)\n                deathsDates.forEach((date) => {\n                  try {\n\n                    const dateDate = new Date(date);\n                    const daily = country.attributes.deathsDaily.find((element) => {return element.dateStr === date});\n                    if(daily) {\n                      daily.value += countryDaily.timeline.deaths[date];\n                      daily.increase += countryDaily.timeline.deaths[date] - lastdayDeaths;\n                    } else {\n                      country.attributes.deathsDaily.push({\n                        date: dateDate,\n                        dateStr: date,\n                        value: countryDaily.timeline.deaths[date],\n                        increase: countryDaily.timeline.deaths[date] - lastdayDeaths\n                      });\n                    }\n\n                    const dailyWorld = dailyWorldDeaths.find((element) => {return element.dateStr === date});\n                    if (dailyWorld) {\n                      dailyWorld.value += countryDaily.timeline.deaths[date];\n                      dailyWorld.increase += countryDaily.timeline.deaths[date] - lastdayDeaths;\n                    } else {\n                      dailyWorldDeaths.push({ \n                        date: dateDate,\n                        dateStr: date,\n                        value: countryDaily.timeline.deaths[date],\n                        increase: countryDaily.timeline.deaths[date] - lastdayDeaths\n                     });\n                    }\n\n                } catch { }\n\n                  lastdayDeaths = countryDaily.timeline.deaths[date]\n                });\n                \n              });\n              that.confirmedDailyWorld = dailyWorldConfirmed;\n              that.recoveredDailyWorld = dailyWorldRecovered;\n              that.deathsDailyWorld = dailyWorldDeaths;\n            }\n          });\n\n          const current = that.state.currentData;\n          current.totalConfirmed = formatNumber(that.totalWorld.totalConfirmed);\n          current.totalActive = formatNumber(that.totalWorld.totalActive);\n          current.totalRecovered = formatNumber(that.totalWorld.totalRecovered);\n          current.totalDeaths = formatNumber(that.totalWorld.totalDeaths);\n\n          that.state.confirmedDaily = that.confirmedDailyWorld;\n          that.state.recoveredDaily = that.recoveredDailyWorld;\n          that.state.deathsDaily = that.deathsDailyWorld;\n          that.state.currentData = current;\n          \n        }\n      });\n\n      return dataList;\n    };\n\n    this.tooltipText = (info) => {\n      if (info.layer.type === 'marker') {\n        var dailyConfirmed = formatNumber(parseInt(info.attribute('confirmedDaily')[info.attribute('confirmedDaily').length - 1].increase));\n        var dailyRecovered = formatNumber(parseInt(info.attribute('recoveredDaily')[info.attribute('recoveredDaily').length - 1].increase));\n        var dailyDeaths = formatNumber(parseInt(info.attribute('deathsDaily')[info.attribute('deathsDaily').length - 1].increase));\n        return {\n          text: '<b>' + info.attribute('region') + '</b>' +\n                '<br />&nbsp;<br />Confirmed: ' + formatNumber(parseInt(info.attribute('confirmed'))) + ' (' + dailyConfirmed + ')' +\n                '<br />Recovered: ' + formatNumber(parseInt(info.attribute('recovered'))) + ' (' + dailyRecovered + ')' +\n                '<br />Active: ' + formatNumber(parseInt(info.attribute('active'))) +\n                '<br />Deaths: ' + formatNumber(parseInt(info.attribute('deaths'))) + ' (' + dailyDeaths + ')'\n        }\n      }\n    }\n    \n    this.chartTooltipText = (info) => {\n      return { text: info.argument.toLocaleDateString(\"en-US\") + ': ' + formatNumber(parseInt(info.value)) };\n    }\n\n    this.markerClick = (e) => {\n      if (e.target && e.target.layer.type === 'marker') {\n        e.component.center(e.target.coordinates()).zoomFactor(6);\n\n        const confirmedDaily = e.target.attribute('confirmedDaily');\n        const recoveredDaily = e.target.attribute('recoveredDaily');\n        const deathsDaily = e.target.attribute('deathsDaily');\n        \n        const current = this.state.currentData;\n        current.regionName = e.target.attribute('region');\n        current.totalConfirmed = formatNumber(parseInt(e.target.attribute('confirmed')));\n        current.totalActive = formatNumber(parseInt(e.target.attribute('active')));\n        current.totalRecovered = formatNumber(parseInt(e.target.attribute('recovered')));\n        current.totalDeaths= formatNumber(parseInt(e.target.attribute('deaths')));\n\n        this.setState({\n          confirmedDaily: confirmedDaily,\n          recoveredDaily: recoveredDaily,\n          deathsDaily: deathsDaily,\n          currentData: current\n        });\n\n        for(let i = 0; i < this.mapRegions.length; i++) {\n          if(e.target.attribute('regionISO3') === this.mapRegions[i].attribute('iso_a3')) {\n            this.mapRegions[i].applySettings({\n              color: '#FFAE42',\n            });\n          } else {\n            this.mapRegions[i].applySettings({\n              color: mapcolor,\n            });\n          }\n        }\n      }\n    }\n\n    this.resetClick = () => {\n      this.vectorMap.center(null);\n      this.vectorMap.zoomFactor(null);\n\n      const current = this.state.currentData;\n      current.regionName = worldRegionName;\n      current.totalConfirmed = formatNumber(this.totalWorld.totalConfirmed);\n      current.totalActive = formatNumber(this.totalWorld.totalActive);\n      current.totalRecovered = formatNumber(this.totalWorld.totalRecovered);\n      current.totalDeaths = formatNumber(this.totalWorld.totalDeaths);\n\n      this.setState({\n        confirmedDaily: this.confirmedDailyWorld,\n        recoveredDaily: this.recoveredDailyWorld,\n        deathsDaily: this.deathsDailyWorld,\n        currentData: current\n      });\n\n      for(let i = 0; i < this.mapRegions.length; i++) {\n        this.mapRegions[i].applySettings({\n          color: mapcolor,\n        });\n      }\n    };\n\n    this.summarizeGridText = (data) => {\n      return formatNumber(data.value);\n    };\n\n    this.getRegions = (elements) => {\n      this.mapRegions = elements;\n    }\n\n    this.dataSource = this.getData();\n  }\n  \n  render() {\n    return (\n      <React.Fragment>\n        <ResponsiveBox singleColumnScreen=\"sm\" id=\"responsice-box\" screenByWidth={this.screen} height={() => window.innerHeight}>\n          <Row ratio={3} />\n          <Row ratio={3} screen=\"xs\" />\n          <Row ratio={1} />\n\n          <Col ratio={2} />\n          <Col ratio={1} screen=\"lg\" />\n          <Col ratio={0} screen=\"lg\" />\n          <ResponsiveBoxItem>\n            <Location row={0} col={0} screen=\"lg\" />\n            <Location row={0} col={0} colspan={2} screen=\"sm\" />\n\n            <div className=\"dx-card responsive-paddings\">\n              <div id=\"region\"><h2 id=\"region-name\">{this.state.currentData.regionName}</h2></div>\n              <Button\n                id=\"reset\"\n                text=\"Reset\"\n                onClick={this.resetClick}/>\n              <TabPanel className=\"map-tab-panel\">\n                <TabPanelItem title=\"World Map\">\n                  <VectorMap\n                    id=\"vector-map\"\n                    ref={this.storeVectorMap}\n                    bounds={this.bounds}\n                    onClick={this.markerClick}\n                    >\n                    <Layer\n                      dataSource={mapsData.world}\n                      hoverEnabled={false}\n                      customize={this.getRegions}\n                      color={mapcolor}>\n                    </Layer>\n                    <Layer\n                      dataSource={this.dataSource}\n                      name=\"bubbles\"\n                      elementType=\"bubble\"\n                      dataField=\"confirmed\"\n                      minSize={5}\n                      maxSize={100}\n                      opacity=\"0.8\"\n                      sizeGroups={this.sizeGroups}\n                      color=\"#ff3300\">\n                      <Label enabled={false}></Label>\n                    </Layer>\n                    <Layer\n                      dataSource={this.dataSource}\n                      name=\"bubbles\"\n                      elementType=\"bubble\"\n                      dataField=\"recovered\"\n                      minSize={1}\n                      maxSize={100}\n                      opacity=\"0.8\"\n                      sizeGroups={this.sizeGroups}\n                      color=\"#149414\">\n                      <Label enabled={false}></Label>\n                    </Layer>\n                    <Layer\n                      dataSource={this.dataSource}\n                      name=\"bubbles\"\n                      elementType=\"bubble\"\n                      dataField=\"deaths\"\n                      minSize={1}\n                      maxSize={100}\n                      opacity=\"0.8\"\n                      sizeGroups={this.sizeGroups}\n                      color=\"#000000\">\n                      <Label enabled={false}></Label>\n                    </Layer>\n                    <Tooltip enabled={true}\n                      customizeTooltip={this.tooltipText} />\n                  </VectorMap>\n                  <Form id=\"totals-form\">\n                    <GroupItem colCount={2}>\n                      <GroupItem>\n                        <div className=\"dx-field\">\n                          <div className=\"dx-field-label\">Confirmed Cases</div>\n                          <div className=\"dx-field-value\">\n                            <TextBox readOnly={true}\n                              hoverStateEnabled={false}\n                              value={this.state.currentData.totalConfirmed } />\n                          </div>\n                        </div>\n                        <div className=\"dx-field\">\n                          <div className=\"dx-field-label\">Active Cases</div>\n                          <div className=\"dx-field-value\">\n                            <TextBox readOnly={true}\n                              hoverStateEnabled={false}\n                              value={this.state.currentData.totalActive } />\n                          </div>\n                        </div>\n                      </GroupItem>\n                      <GroupItem>\n                        <div className=\"dx-field\">\n                          <div className=\"dx-field-label\">Recovered Cases</div>\n                          <div className=\"dx-field-value\">\n                            <TextBox readOnly={true}\n                              hoverStateEnabled={false}\n                              value={this.state.currentData.totalRecovered } />\n                          </div>\n                        </div>\n                        <div className=\"dx-field\">\n                          <div className=\"dx-field-label\">Deaths</div>\n                          <div className=\"dx-field-value\">\n                            <TextBox readOnly={true}\n                              hoverStateEnabled={false}\n                              value={this.state.currentData.totalDeaths} />\n                          </div>\n                        </div>\n                      </GroupItem>\n                    </GroupItem>\n                  </Form>\n              </TabPanelItem>\n                <TabPanelItem title=\"Table\">\n                  <DataGrid\n                    id=\"gridContainer\"\n                    dataSource={this.dataSource}\n                    showBorders={false}\n                    showColumnLines={false}\n                    showRowLines={false}\n                    focusedRowEnabled={true}\n                    rowAlternationEnabled={true}\n                    height={window.innerHeight - 140}\n                    keyExpr=\"attributes.region\">\n                    <Selection mode=\"single\" />\n                    <Scrolling mode=\"virtual\" />\n                    <Column dataField=\"attributes.region\"  caption=\"Country\" />\n                    <Column dataField=\"attributes.confirmed\" width={100} caption=\"Confirmed\" dataType=\"number\" defaultSortOrder=\"desc\"/>\n                    <Column dataField=\"attributes.recovered\" width={100} caption=\"Recovered\" dataType=\"number\"/>\n                    <Column dataField=\"attributes.deaths\" width={100} caption=\"Deaths\" dataType=\"number\"/>\n                    <Column dataField=\"attributes.active\" width={100} caption=\"Active\" dataType=\"number\"/>\n                    <Summary>\n                      <TotalItem column=\"Confirmed\" summaryType=\"sum\" customizeText={this.summarizeGridText}/>\n                      <TotalItem column=\"Recovered\" summaryType=\"sum\" customizeText={this.summarizeGridText}/>\n                      <TotalItem column=\"Deaths\" summaryType=\"sum\" customizeText={this.summarizeGridText}/>\n                      <TotalItem column=\"Active\" summaryType=\"sum\" customizeText={this.summarizeGridText}/>\n                    </Summary>\n                  </DataGrid>\n                </TabPanelItem>\n              </TabPanel>\n            </div>\n          </ResponsiveBoxItem>\n\n          <ResponsiveBoxItem>\n            <Location row={0} col={1} screen=\"lg\" />\n            <Location row={1} col={0} colspan={2} screen=\"sm\" />\n\n            <div className=\"dx-card responsive-paddings\">\n              <TabPanel className=\"tab-panel\">\n                <TabPanelItem title=\"Confirmed Daily\">\n                  <Chart dataSource={this.state.confirmedDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"increase\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"bar\"\n                      color=\"#ff3300\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n                <TabPanelItem title=\"Recovered Daily\">\n                  <Chart dataSource={this.state.recoveredDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"increase\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"bar\"\n                      color=\"#149414\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n                <TabPanelItem title=\"Deaths Daily\">\n                  <Chart dataSource={this.state.deathsDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"increase\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"bar\"\n                      color=\"#000000\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n              </TabPanel>\n              <TabPanel className=\"tab-panel\">\n                <TabPanelItem title=\"Confirmed Linear\">\n                  <Chart dataSource={this.state.confirmedDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"value\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"spline\"\n                      color=\"#ff3300\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n                <TabPanelItem title=\"Recovered Linear\">\n                  <Chart dataSource={this.state.recoveredDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"value\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"spline\"\n                      color=\"#149414\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n                <TabPanelItem title=\"Deaths Linear\">\n                  <Chart dataSource={this.state.deathsDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"value\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"spline\"\n                      color=\"#000000\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n              </TabPanel>\n              <TabPanel className=\"tab-panel\">\n                <TabPanelItem title=\"Confirmed Log.\">\n                  <Chart dataSource={this.state.confirmedDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"value\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"spline\"\n                      color=\"#ff3300\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ValueAxis type=\"logarithmic\" />\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n                <TabPanelItem title=\"Recovered Log.\">\n                  <Chart dataSource={this.state.recoveredDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"value\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"spline\"\n                      color=\"#149414\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ValueAxis type=\"logarithmic\" />\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n                <TabPanelItem title=\"Deaths Log.\">\n                  <Chart dataSource={this.state.deathsDaily}>\n                    <Size height={(window.innerHeight / 3)-70} />\n                    <Series\n                      valueField=\"value\"\n                      argumentField=\"date\"\n                      barPadding={0}\n                      type=\"spline\"\n                      color=\"#000000\" />\n                      <Legend visible={false}></Legend>\n                      <ArgumentAxis>\n                        <TickInterval days={20} /> \n                        <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                      </ArgumentAxis>\n                      <ValueAxis type=\"logarithmic\" />\n                      <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                  </Chart>\n                </TabPanelItem>\n              </TabPanel>\n            </div>\n          </ResponsiveBoxItem>\n\n          <ResponsiveBoxItem>\n            <Location row={1} col={0} screen=\"lg\" />\n            <Location row={2} col={0} screen=\"sm\" />\n\n            <div>Datasource: <a href=\"https://corona.lmao.ninja/docs/#/\">Novel COVID API</a></div>\n          </ResponsiveBoxItem>\n\n        </ResponsiveBox>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Covid19Dashboard;","import 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport './App.css'\nimport React from 'react';\nimport Covid19Dashboard from './Components/Covid19Dashboard'\nclass App extends React.Component {\n\n  \n  render() {\n    return (\n      <Covid19Dashboard />\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}