{"version":3,"sources":["Components/Covid19Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Covid19Dashboard","props","addDailyData","ajaxUrl","dataList","attributeName","dailyWorldData","JQuery","ajax","url","async","crossDomain","accept","success","result","csvdata","Papa","parse","i","data","length","isCompressRegion","regionName","found","find","element","attributes","region","lastvalue","j","value","increase","date","Date","parseInt","valueLog","Math","log","push","state","confirmedDaily","recoveredDaily","deathsDaily","currentData","totalConfirmed","totalActive","totalRecovered","totalDeaths","confirmedDailyWorld","recoveredDailyWorld","deathsDailyWorld","totalWorld","screen","width","storeVectorMap","component","vectorMap","instance","bounds","sizeGroups","groupSize","dataSource","DataSource","load","that","deferred","Deferred","newestFile","download_url","confirmed","recovered","deaths","active","lat","parseFloat","long","isNaN","coordinates","current","formatNumber","setState","resolve","promise","tooltipText","info","layer","type","dailyConfirmed","attribute","dailyRecovered","dailyDeaths","text","chartTooltipText","argument","toLocaleDateString","markerClick","e","target","center","zoomFactor","console","resetClick","singleColumnScreen","id","screenByWidth","this","height","window","innerHeight","ratio","row","col","colspan","className","onClick","ref","mapsData","hoverEnabled","name","elementType","dataField","minSize","maxSize","opacity","color","enabled","customizeTooltip","colCount","readOnly","hoverStateEnabled","title","valueField","argumentField","barPadding","visible","days","overlappingBehavior","href","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ec423276.chunk.js","sourcesContent":["import 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport './Covid19Dashboard.css'\nimport React from 'react';\n\nimport DataSource from 'devextreme/data/data_source';\nimport { Button } from 'devextreme-react';\nimport ResponsiveBox, {\n  Row,\n  Col,\n  Item as ResponsiveBoxItem,\n  Location\n} from 'devextreme-react/responsive-box';\nimport VectorMap, {\n  Label,\n  Layer,\n  Tooltip\n} from 'devextreme-react/vector-map';\nimport { TabPanel, Item as TabPanelItem } from \"devextreme-react/tab-panel\";\nimport { Chart,\n  Series,\n  Legend,\n  Size,\n  ArgumentAxis,\n  Label as ChartLabel,\n  Tooltip as ChartTooltip,\n  TickInterval \n} from 'devextreme-react/chart';\nimport Form, {\n  GroupItem,\n} from 'devextreme-react/form';\nimport { TextBox } from 'devextreme-react';\nimport { formatNumber } from 'devextreme/localization';\n\nimport JQuery from 'jquery'\nimport Papa from 'papaparse'\nimport * as mapsData from 'devextreme/dist/js/vectormap-data/world.js';\n\nconst worldRegionName = \"World\"\n\nclass Covid19Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmedDaily: [],\n      recoveredDaily: [],\n      deathsDaily: [],\n      currentData: {\n        regionName: worldRegionName,\n        totalConfirmed: '0',\n        totalActive: '0',\n        totalRecovered: '0',\n        totalDeaths: '0',\n      }\n    };\n    this.confirmedDailyWorld = [];\n    this.recoveredDailyWorld = [];\n    this.deathsDailyWorld = [];\n    this.totalWorld = {\n      totalConfirmed: 0,\n        totalActive: 0,\n        totalRecovered: 0,\n        totalDeaths: 0,\n    };\n\n\n    this.screen = (width) => width < 700 ? \"sm\" : \"lg\";\n  \n    this.storeVectorMap = (component) => {\n      this.vectorMap = component.instance;\n    };\n\n    this.bounds = [-180, 85, 180, -60];\n\n    this.sizeGroups = function () {\n      const groupSize = []\n\n      for (let i = 0; i < 11; i++) {\n        groupSize.push(i * 10)\n      }\n\n      for (let i = 1; i < 11; i++) {\n        groupSize.push(i * 100)\n      }\n\n      for (let i = 1; i < 101; i++) {\n        groupSize.push(i * 1000)\n      }\n\n      for (let i = 1; i < 101; i++) {\n        groupSize.push(i * 10000)\n      }\n\n      for (let i = 1; i < 201; i++) {\n        groupSize.push(i * 10000)\n      }\n\n      return groupSize\n    } ();\n\n    this.dataSource = new DataSource({\n      load: () => {\n        var that = this;\n        const deferred = JQuery.Deferred()\n  \n        JQuery.ajax({\n          url: 'https://api.github.com/repos/CSSEGISandData/COVID-19/contents/csse_covid_19_data/csse_covid_19_daily_reports',\n          async: false,\n          crossDomain: true,\n          accept: {\n            'Access-Control-Allow-Origin': '*'\n          },\n          success: function (result) {\n            const newestFile = result[result.length - 2]\n            const dataList = []\n            JQuery.ajax({\n              url: newestFile.download_url,\n              async: false,\n              crossDomain: true,\n              accept: {\n                'Access-Control-Allow-Origin': '*'\n              },\n              success: function (result) {\n                const csvdata = Papa.parse(result)\n                for (var i = 1; i < csvdata.data.length - 1; i++) {\n                  const isCompressRegion = (csvdata.data[i][3] === 'US' || csvdata.data[i][3] === 'China' ||\n                                            csvdata.data[i][3] === 'Canada' || csvdata.data[i][3] === 'Australia')\n  \n                  let regionName = ''\n  \n                  if (isCompressRegion) {\n                    regionName = csvdata.data[i][3]\n                  } else {\n                    // regionName = csvdata.data[i][1] ? csvdata.data[i][1] + ', ' : ''\n                    regionName += csvdata.data[i][2] ? csvdata.data[i][2] + ', ' : ''\n                    regionName += csvdata.data[i][3]\n                  }\n  \n                  const found = dataList.find((element) => element.attributes.region === regionName && isCompressRegion)\n                  if (found) {\n                    found.attributes.confirmed += parseInt(csvdata.data[i][7])\n                    found.attributes.recovered += parseInt(csvdata.data[i][9])\n                    found.attributes.deaths += parseInt(csvdata.data[i][8])\n                    found.attributes.active += parseInt(csvdata.data[i][10])\n                  } else {\n                    let lat = parseFloat(csvdata.data[i][5])\n                    let long = parseFloat(csvdata.data[i][6])\n  \n                    if (regionName === 'US') {\n                      lat = 39.50\n                      long = -98.35\n                    }\n  \n                    if (regionName === 'Canada') {\n                      lat = 62.24\n                      long = -96.4835\n                    }\n  \n                    if (regionName === 'China') {\n                      lat = 35.33\n                      long = 103.23\n                    }\n                    if (regionName === 'Australia') {\n                      lat = -23.7\n                      long = 132.8\n                    }\n  \n                    if (!isNaN(lat)) {\n                      dataList.push({\n                        coordinates: [long, lat],\n                        attributes: {\n                          region: regionName,\n                          confirmed: parseInt(csvdata.data[i][7]),\n                          recovered: parseInt(csvdata.data[i][9]),\n                          deaths: parseInt(csvdata.data[i][8]),\n                          active: parseInt(csvdata.data[i][10]),\n                          confirmedDaily: [],\n                          recoveredDaily: [],\n                          deathsDaily: []\n                        }\n                      })\n                    }\n                  }\n\n                  that.totalWorld.totalConfirmed +=  parseInt(csvdata.data[i][7]);\n                  that.totalWorld.totalActive += parseInt(csvdata.data[i][10]);\n                  that.totalWorld.totalRecovered += parseInt(csvdata.data[i][9]);\n                  that.totalWorld.totalDeaths += parseInt(csvdata.data[i][8]);\n                }\n                that.confirmedDailyWorld = addDailyData('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv', dataList, 'confirmedDaily')\n                that.recoveredDailyWorld = addDailyData('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv', dataList, 'recoveredDaily')\n                that.deathsDailyWorld = addDailyData('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv', dataList, 'deathsDaily')\n\n                const current = that.state.currentData;\n                current.totalConfirmed = formatNumber(that.totalWorld.totalConfirmed);\n                current.totalActive = formatNumber(that.totalWorld.totalActive);\n                current.totalRecovered = formatNumber(that.totalWorld.totalRecovered);\n                current.totalDeaths = formatNumber(that.totalWorld.totalDeaths);\n\n                that.setState({\n                  confirmedDaily: that.confirmedDailyWorld,\n                  recoveredDaily: that.recoveredDailyWorld,\n                  deathsDaily: that.deathsDailyWorld,\n                  currentData: current\n                });\n              }\n            })\n            deferred.resolve(dataList)\n          }\n        })\n  \n        return deferred.promise()\n      }\n    });\n  \n    function addDailyData (ajaxUrl, dataList, attributeName) {\n      const dailyWorldData = [];\n\n      JQuery.ajax({\n        url: ajaxUrl,\n        async: false,\n        crossDomain: true,\n        accept: {\n          'Access-Control-Allow-Origin': '*'\n        },\n        success: function (result) {\n          const csvdata = Papa.parse(result)\n          for (var i = 1; i < csvdata.data.length - 1; i++) {\n            const isCompressRegion = (csvdata.data[i][1] === 'US' || csvdata.data[i][1] === 'China' ||\n                                  csvdata.data[i][1] === 'Canada' || csvdata.data[i][1] === 'Australia')\n    \n            var regionName = ''\n            if (isCompressRegion) {\n              regionName = csvdata.data[i][1]\n            } else {\n              regionName = csvdata.data[i][0] ? csvdata.data[i][0] + ', ' : ''\n              regionName += csvdata.data[i][1]\n            }\n            // eslint-disable-next-line no-loop-func\n            const found = dataList.find((element) => {\n              return element.attributes.region === regionName;\n            })\n            if (found) {\n              let lastvalue = 0\n              for (var j = 4; j < csvdata.data[i].length; j++) {\n                if (!found.attributes[attributeName][j - 4]) {\n                  found.attributes[attributeName][j - 4] = {}\n                }\n    \n                if (!found.attributes[attributeName][j - 4].value) {\n                  found.attributes[attributeName][j - 4].value = 0\n                }\n    \n                if (!found.attributes[attributeName][j - 4].increase) {\n                  found.attributes[attributeName][j - 4].increase = 0\n                }\n    \n                found.attributes[attributeName][j - 4].date = new Date(csvdata.data[0][j])\n                found.attributes[attributeName][j - 4].value += parseInt(csvdata.data[i][j])\n                found.attributes[attributeName][j - 4].increase += parseInt(csvdata.data[i][j]) - lastvalue\n                found.attributes[attributeName][j - 4].valueLog = found.attributes[attributeName][j - 4].value > 0 ? Math.log(found.attributes[attributeName][j - 4].value) : 0;\n\n                if(i === 1) {\n                  dailyWorldData.push({ \n                    date: new Date(csvdata.data[0][j]) , \n                    value: parseInt(csvdata.data[i][j]),\n                    valueLog: Math.log(parseInt(csvdata.data[i][j])),\n                    increase: parseInt(csvdata.data[i][j]) - lastvalue\n                 });\n                } else {\n                  dailyWorldData[j - 4].value += parseInt(csvdata.data[i][j]);\n                  dailyWorldData[j - 4].valueLog = dailyWorldData[j - 4].value > 0 ? Math.log(dailyWorldData[j - 4].value) : 0;\n                  dailyWorldData[j - 4].increase += parseInt(csvdata.data[i][j]) - lastvalue\n                }\n\n                lastvalue = parseInt(csvdata.data[i][j]);\n              }\n            }\n          }\n        }\n      });\n      return dailyWorldData;\n    }\n\n    this.tooltipText = (info) => {\n      if (info.layer.type === 'marker') {\n        var dailyConfirmed = formatNumber(parseInt(info.attribute('confirmedDaily')[info.attribute('confirmedDaily').length - 1].increase));\n        var dailyRecovered = formatNumber(parseInt(info.attribute('recoveredDaily')[info.attribute('recoveredDaily').length - 1].increase));\n        var dailyDeaths = formatNumber(parseInt(info.attribute('deathsDaily')[info.attribute('deathsDaily').length - 1].increase));\n        return {\n          text: '<b>' + info.attribute('region') + '</b>' +\n                '<br />&nbsp;<br />Confirmed: ' + formatNumber(parseInt(info.attribute('confirmed'))) + ' (' + dailyConfirmed + ')' +\n                '<br />Recovered: ' + formatNumber(parseInt(info.attribute('recovered'))) + ' (' + dailyRecovered + ')' +\n                '<br />Active: ' + formatNumber(parseInt(info.attribute('active'))) +\n                '<br />Deaths: ' + formatNumber(parseInt(info.attribute('deaths'))) + ' (' + dailyDeaths + ')'\n        }\n      }\n    }\n    \n    this.chartTooltipText = (info) => {\n      return { text: info.argument.toLocaleDateString(\"en-US\") + ': ' + formatNumber(parseInt(info.value)) };\n    }\n\n    this.markerClick = (e) => {\n      \n      if (e.target && e.target.layer.type === 'marker') {\n        e.component.center(e.target.coordinates()).zoomFactor(6);\n        \n        \n        const confirmedDaily = e.target.attribute('confirmedDaily');\n        const recoveredDaily = e.target.attribute('recoveredDaily');\n        const deathsDaily = e.target.attribute('deathsDaily');\n        \n        const current = this.state.currentData;\n        current.regionName = e.target.attribute('region');\n        current.totalConfirmed = formatNumber(parseInt(e.target.attribute('confirmed')));\n        current.totalActive = formatNumber(parseInt(e.target.attribute('active')));\n        current.totalRecovered = formatNumber(parseInt(e.target.attribute('recovered')));\n        current.totalDeaths= formatNumber(parseInt(e.target.attribute('deaths')));\n        console.log(current)\n        this.setState({\n          confirmedDaily: confirmedDaily,\n          recoveredDaily: recoveredDaily,\n          deathsDaily: deathsDaily,\n          currentData: current\n        });\n      }\n    }\n\n    this.resetClick = () => {\n      this.vectorMap.center(null);\n      this.vectorMap.zoomFactor(null);\n\n      const current = this.state.currentData;\n      current.regionName = worldRegionName;\n      current.totalConfirmed = formatNumber(this.totalWorld.totalConfirmed);\n      current.totalActive = formatNumber(this.totalWorld.totalActive);\n      current.totalRecovered = formatNumber(this.totalWorld.totalRecovered);\n      current.totalDeaths = formatNumber(this.totalWorld.totalDeaths);\n\n      this.setState({\n        confirmedDaily: this.confirmedDailyWorld,\n        recoveredDaily: this.recoveredDailyWorld,\n        deathsDaily: this.deathsDailyWorld,\n        currentData: current\n      });\n    };\n  }\n  \n  render() {\n    return (\n      <ResponsiveBox singleColumnScreen=\"sm\" id=\"responsice-box\" screenByWidth={this.screen} height={() => window.innerHeight}>\n        <Row ratio={3} />\n        <Row ratio={3} screen=\"xs\" />\n        <Row ratio={1} />\n\n        <Col ratio={2} />\n        <Col ratio={1} screen=\"lg\" />\n        <Col ratio={0} screen=\"lg\" />\n        <ResponsiveBoxItem>\n          <Location row={0} col={0} screen=\"lg\" />\n          <Location row={0} col={0} colspan={2} screen=\"sm\" />\n\n          <div className=\"dx-card responsive-paddings\">\n            <div id=\"region\"><h2 id=\"region-name\">{this.state.currentData.regionName}</h2></div>\n            <Button\n              id=\"reset\"\n              text=\"Reset\"\n              onClick={this.resetClick}/>\n            <VectorMap\n              id=\"vector-map\"\n              ref={this.storeVectorMap}\n              bounds={this.bounds}\n              onClick={this.markerClick}>\n              <Layer\n                dataSource={mapsData.world}\n                hoverEnabled={false}>\n              </Layer>\n              <Layer\n                dataSource={this.dataSource}\n                name=\"bubbles\"\n                elementType=\"bubble\"\n                dataField=\"confirmed\"\n                minSize={5}\n                maxSize={100}\n                opacity=\"0.8\"\n                sizeGroups={this.sizeGroups}\n                color=\"#ff3300\">\n                <Label enabled={false}></Label>\n              </Layer>\n              <Layer\n                dataSource={this.dataSource}\n                name=\"bubbles\"\n                elementType=\"bubble\"\n                dataField=\"recovered\"\n                minSize={1}\n                maxSize={100}\n                opacity=\"0.8\"\n                sizeGroups={this.sizeGroups}\n                color=\"#149414\">\n                <Label enabled={false}></Label>\n              </Layer>\n              <Layer\n                dataSource={this.dataSource}\n                name=\"bubbles\"\n                elementType=\"bubble\"\n                dataField=\"deaths\"\n                minSize={1}\n                maxSize={100}\n                opacity=\"0.8\"\n                sizeGroups={this.sizeGroups}\n                color=\"#000000\">\n                <Label enabled={false}></Label>\n              </Layer>\n              <Tooltip enabled={true}\n                customizeTooltip={this.tooltipText} />\n            </VectorMap>\n            <Form id=\"totals-form\">\n              <GroupItem colCount={2}>\n                <GroupItem>\n                  <div className=\"dx-field\">\n                    <div className=\"dx-field-label\">Confirmed Cases</div>\n                    <div className=\"dx-field-value\">\n                      <TextBox readOnly={true}\n                        hoverStateEnabled={false}\n                        value={this.state.currentData.totalConfirmed } />\n                    </div>\n                  </div>\n                  <div className=\"dx-field\">\n                    <div className=\"dx-field-label\">Active Cases</div>\n                    <div className=\"dx-field-value\">\n                      <TextBox readOnly={true}\n                        hoverStateEnabled={false}\n                        value={this.state.currentData.totalActive } />\n                    </div>\n                  </div>\n                </GroupItem>\n                <GroupItem>\n                  <div className=\"dx-field\">\n                    <div className=\"dx-field-label\">Recovered Cases</div>\n                    <div className=\"dx-field-value\">\n                      <TextBox readOnly={true}\n                        hoverStateEnabled={false}\n                        value={this.state.currentData.totalRecovered } />\n                    </div>\n                  </div>\n                  <div className=\"dx-field\">\n                    <div className=\"dx-field-label\">Deaths</div>\n                    <div className=\"dx-field-value\">\n                      <TextBox readOnly={true}\n                        hoverStateEnabled={false}\n                        value={this.state.currentData.totalDeaths} />\n                    </div>\n                  </div>\n                </GroupItem>\n              </GroupItem>\n            </Form>\n          </div>\n        </ResponsiveBoxItem>\n\n        <ResponsiveBoxItem>\n          <Location row={0} col={1} screen=\"lg\" />\n          <Location row={1} col={0} colspan={2} screen=\"sm\" />\n\n          <div className=\"dx-card responsive-paddings\">\n            <TabPanel>\n              <TabPanelItem title=\"Confirmed Daily\">\n                <Chart dataSource={this.state.confirmedDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"increase\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"bar\"\n                    color=\"#ff3300\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis>\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n              <TabPanelItem title=\"Recovered Daily\">\n                <Chart dataSource={this.state.recoveredDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"increase\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"bar\"\n                    color=\"#149414\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis>\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n              <TabPanelItem title=\"Deaths Daily\">\n                <Chart dataSource={this.state.deathsDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"increase\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"bar\"\n                    color=\"#000000\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis>\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n            </TabPanel>\n            <TabPanel>\n              <TabPanelItem title=\"Confirmed Linear\">\n                <Chart dataSource={this.state.confirmedDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"value\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"spline\"\n                    color=\"#ff3300\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis>\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n              <TabPanelItem title=\"Recovered Linear\">\n                <Chart dataSource={this.state.recoveredDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"value\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"spline\"\n                    color=\"#149414\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis>\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n              <TabPanelItem title=\"Deaths Linear\">\n                <Chart dataSource={this.state.deathsDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"value\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"spline\"\n                    color=\"#000000\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis>\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n            </TabPanel>\n            <TabPanel>\n              <TabPanelItem title=\"Confirmed Log.\">\n                <Chart dataSource={this.state.confirmedDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"valueLog\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"spline\"\n                    color=\"#ff3300\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis>\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n              <TabPanelItem title=\"Recovered Log.\">\n                <Chart dataSource={this.state.recoveredDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"valueLog\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"spline\"\n                    color=\"#149414\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis>\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n              <TabPanelItem title=\"Deaths Log.\">\n                <Chart dataSource={this.state.deathsDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"valueLog\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"spline\"\n                    color=\"#000000\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis>\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n            </TabPanel>\n          </div>\n        </ResponsiveBoxItem>\n\n        <ResponsiveBoxItem>\n          <Location row={1} col={0} screen=\"lg\" />\n          <Location row={2} col={0} screen=\"sm\" />\n\n          <div>Datasource: <a href=\"https://github.com/CSSEGISandData/COVID-19\">Johns Hopkins CSSE</a></div>\n        </ResponsiveBoxItem>\n\n      </ResponsiveBox>\n    );\n  }\n}\n\nexport default Covid19Dashboard;","import 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport './App.css'\nimport React from 'react';\nimport Covid19Dashboard from './Components/Covid19Dashboard'\nclass App extends React.Component {\n\n  \n  render() {\n    return (\n      <Covid19Dashboard />\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}