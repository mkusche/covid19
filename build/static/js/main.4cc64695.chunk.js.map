{"version":3,"sources":["Components/Covid19Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Covid19Dashboard","props","addDailyData","ajaxUrl","dataList","attributeName","dailyWorldData","JQuery","ajax","url","async","crossDomain","accept","success","result","csvdata","Papa","parse","i","data","length","isCompressRegion","regionName","found","find","element","attributes","region","lastvalue","j","value","increase","date","Date","parseInt","valueLog","Math","log","push","state","confirmedDaily","recoveredDaily","deathsDaily","confirmedDailyWorld","recoveredDailyWorld","deathsDailyWorld","screen","width","storeVectorMap","component","vectorMap","instance","bounds","sizeGroups","groupSize","dataSource","DataSource","load","that","deferred","Deferred","newestFile","download_url","confirmed","recovered","deaths","active","lat","parseFloat","long","isNaN","coordinates","setState","resolve","promise","tooltipText","info","layer","type","dailyConfirmed","attribute","dailyRecovered","dailyDeaths","text","chartTooltipText","argument","toLocaleDateString","markerClick","e","target","center","zoomFactor","resetClick","singleColumnScreen","id","screenByWidth","this","height","window","innerHeight","ratio","row","col","colspan","className","onClick","ref","mapsData","hoverEnabled","name","elementType","dataField","minSize","maxSize","opacity","color","enabled","customizeTooltip","title","valueField","argumentField","barPadding","visible","days","overlappingBehavior","href","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4cc64695.chunk.js","sourcesContent":["import 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport './Covid19Dashboard.css'\nimport React from 'react';\n\nimport DataSource from 'devextreme/data/data_source';\nimport { Button } from 'devextreme-react';\nimport ResponsiveBox, {\n  Row,\n  Col,\n  Item as ResponsiveBoxItem,\n  Location\n} from 'devextreme-react/responsive-box';\nimport VectorMap, {\n  Label,\n  Layer,\n  Tooltip\n} from 'devextreme-react/vector-map';\nimport { TabPanel, Item as TabPanelItem } from \"devextreme-react/tab-panel\";\nimport { Chart,\n  Series,\n  Legend,\n  Size,\n  ArgumentAxis,\n  Label as ChartLabel,\n  Tooltip as ChartTooltip,\n  TickInterval } from 'devextreme-react/chart';\n\nimport JQuery from 'jquery'\nimport Papa from 'papaparse'\nimport * as mapsData from 'devextreme/dist/js/vectormap-data/world.js';\n\nconst worldRegionName = \"World\"\n\nclass Covid19Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmedDaily: [],\n      recoveredDaily: [],\n      deathsDaily: [],\n      regionName: worldRegionName\n    };\n    this.confirmedDailyWorld = [];\n    this.recoveredDailyWorld = [];\n    this.deathsDailyWorld = [];\n\n\n    this.screen = (width) => width < 700 ? \"sm\" : \"lg\";\n  \n    this.storeVectorMap = (component) => {\n      this.vectorMap = component.instance;\n    };\n\n    this.bounds = [-180, 85, 180, -60];\n\n    this.sizeGroups = function () {\n      const groupSize = []\n\n      for (let i = 0; i < 11; i++) {\n        groupSize.push(i * 10)\n      }\n\n      for (let i = 1; i < 11; i++) {\n        groupSize.push(i * 100)\n      }\n\n      for (let i = 1; i < 101; i++) {\n        groupSize.push(i * 1000)\n      }\n\n      for (let i = 1; i < 101; i++) {\n        groupSize.push(i * 10000)\n      }\n\n      for (let i = 1; i < 201; i++) {\n        groupSize.push(i * 10000)\n      }\n\n      return groupSize\n    } ();\n\n    this.dataSource = new DataSource({\n      load: () => {\n        var that = this;\n        const deferred = JQuery.Deferred()\n  \n        JQuery.ajax({\n          url: 'https://api.github.com/repos/CSSEGISandData/COVID-19/contents/csse_covid_19_data/csse_covid_19_daily_reports',\n          async: false,\n          crossDomain: true,\n          accept: {\n            'Access-Control-Allow-Origin': '*'\n          },\n          success: function (result) {\n            const newestFile = result[result.length - 2]\n            const dataList = []\n            JQuery.ajax({\n              url: newestFile.download_url,\n              async: false,\n              crossDomain: true,\n              accept: {\n                'Access-Control-Allow-Origin': '*'\n              },\n              success: function (result) {\n                const csvdata = Papa.parse(result)\n                for (var i = 1; i < csvdata.data.length - 1; i++) {\n                  const isCompressRegion = (csvdata.data[i][3] === 'US' || csvdata.data[i][3] === 'China' ||\n                                            csvdata.data[i][3] === 'Canada' || csvdata.data[i][3] === 'Australia')\n  \n                  let regionName = ''\n  \n                  if (isCompressRegion) {\n                    regionName = csvdata.data[i][3]\n                  } else {\n                    // regionName = csvdata.data[i][1] ? csvdata.data[i][1] + ', ' : ''\n                    regionName += csvdata.data[i][2] ? csvdata.data[i][2] + ', ' : ''\n                    regionName += csvdata.data[i][3]\n                  }\n  \n                  const found = dataList.find((element) => element.attributes.region === regionName && isCompressRegion)\n                  if (found) {\n                    found.attributes.confirmed += parseInt(csvdata.data[i][7])\n                    found.attributes.recovered += parseInt(csvdata.data[i][9])\n                    found.attributes.deaths += parseInt(csvdata.data[i][8])\n                    found.attributes.active += parseInt(csvdata.data[i][10])\n                  } else {\n                    let lat = parseFloat(csvdata.data[i][5])\n                    let long = parseFloat(csvdata.data[i][6])\n  \n                    if (regionName === 'US') {\n                      lat = 39.50\n                      long = -98.35\n                    }\n  \n                    if (regionName === 'Canada') {\n                      lat = 62.24\n                      long = -96.4835\n                    }\n  \n                    if (regionName === 'China') {\n                      lat = 35.33\n                      long = 103.23\n                    }\n                    if (regionName === 'Australia') {\n                      lat = -23.7\n                      long = 132.8\n                    }\n  \n                    if (!isNaN(lat)) {\n                      dataList.push({\n                        coordinates: [long, lat],\n                        attributes: {\n                          region: regionName,\n                          confirmed: parseInt(csvdata.data[i][7]),\n                          recovered: parseInt(csvdata.data[i][9]),\n                          deaths: parseInt(csvdata.data[i][8]),\n                          active: parseInt(csvdata.data[i][10]),\n                          confirmedDaily: [],\n                          recoveredDaily: [],\n                          deathsDaily: []\n                        }\n                      })\n                    }\n                  }\n                }\n                that.confirmedDailyWorld = addDailyData('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv', dataList, 'confirmedDaily')\n                that.recoveredDailyWorld = addDailyData('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv', dataList, 'recoveredDaily')\n                that.deathsDailyWorld = addDailyData('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv', dataList, 'deathsDaily')\n\n                that.setState({\n                  confirmedDaily: that.confirmedDailyWorld,\n                  recoveredDaily: that.recoveredDailyWorld,\n                  deathsDaily: that.deathsDailyWorld\n                });\n              }\n            })\n            deferred.resolve(dataList)\n          }\n        })\n  \n        return deferred.promise()\n      }\n    });\n  \n    function addDailyData (ajaxUrl, dataList, attributeName) {\n      const dailyWorldData = [];\n\n      JQuery.ajax({\n        url: ajaxUrl,\n        async: false,\n        crossDomain: true,\n        accept: {\n          'Access-Control-Allow-Origin': '*'\n        },\n        success: function (result) {\n          const csvdata = Papa.parse(result)\n          for (var i = 1; i < csvdata.data.length - 1; i++) {\n            const isCompressRegion = (csvdata.data[i][1] === 'US' || csvdata.data[i][1] === 'China' ||\n                                  csvdata.data[i][1] === 'Canada' || csvdata.data[i][1] === 'Australia')\n    \n            var regionName = ''\n            if (isCompressRegion) {\n              regionName = csvdata.data[i][1]\n            } else {\n              regionName = csvdata.data[i][0] ? csvdata.data[i][0] + ', ' : ''\n              regionName += csvdata.data[i][1]\n            }\n            // eslint-disable-next-line no-loop-func\n            const found = dataList.find((element) => {\n              return element.attributes.region === regionName;\n            })\n            if (found) {\n              let lastvalue = 0\n              for (var j = 4; j < csvdata.data[i].length; j++) {\n                if (!found.attributes[attributeName][j - 4]) {\n                  found.attributes[attributeName][j - 4] = {}\n                }\n    \n                if (!found.attributes[attributeName][j - 4].value) {\n                  found.attributes[attributeName][j - 4].value = 0\n                }\n    \n                if (!found.attributes[attributeName][j - 4].increase) {\n                  found.attributes[attributeName][j - 4].increase = 0\n                }\n    \n                found.attributes[attributeName][j - 4].date = new Date(csvdata.data[0][j])\n                found.attributes[attributeName][j - 4].value += parseInt(csvdata.data[i][j])\n                found.attributes[attributeName][j - 4].increase += parseInt(csvdata.data[i][j]) - lastvalue\n                found.attributes[attributeName][j - 4].valueLog = found.attributes[attributeName][j - 4].value > 0 ? Math.log(found.attributes[attributeName][j - 4].value) : 0;\n\n                if(i === 1) {\n                  dailyWorldData.push({ \n                    date: new Date(csvdata.data[0][j]) , \n                    value: parseInt(csvdata.data[i][j]),\n                    valueLog: Math.log(parseInt(csvdata.data[i][j])),\n                    increase: parseInt(csvdata.data[i][j]) - lastvalue\n                 });\n                } else {\n                  dailyWorldData[j - 4].value += parseInt(csvdata.data[i][j]);\n                  dailyWorldData[j - 4].valueLog = dailyWorldData[j - 4].value > 0 ? Math.log(dailyWorldData[j - 4].value) : 0;\n                  dailyWorldData[j - 4].increase += parseInt(csvdata.data[i][j]) - lastvalue\n                }\n\n                lastvalue = parseInt(csvdata.data[i][j]);\n              }\n            }\n          }\n        }\n      });\n      return dailyWorldData;\n    }\n\n    this.tooltipText = (info) => {\n      if (info.layer.type === 'marker') {\n        var dailyConfirmed = info.attribute('confirmedDaily')[info.attribute('confirmedDaily').length - 1].increase\n        var dailyRecovered = info.attribute('recoveredDaily')[info.attribute('recoveredDaily').length - 1].increase\n        var dailyDeaths = info.attribute('deathsDaily')[info.attribute('deathsDaily').length - 1].increase\n        return {\n          text: '<b>' + info.attribute('region') + '</b>' +\n                '<br />&nbsp;<br />Confirmed: ' + info.attribute('confirmed') + ' (' + dailyConfirmed + ')' +\n                '<br />Recovered: ' + info.attribute('recovered') + ' (' + dailyRecovered + ')' +\n                '<br />Active: ' + info.attribute('active') +\n                '<br />Deaths: ' + info.attribute('deaths') + ' (' + dailyDeaths + ')'\n        }\n      }\n    }\n    \n    this.chartTooltipText = (info) => {\n      return { text: info.argument.toLocaleDateString(\"en-US\") + ': ' + info.value };\n    }\n\n    this.markerClick = (e) => {\n      \n      if (e.target && e.target.layer.type === 'marker') {\n        e.component.center(e.target.coordinates()).zoomFactor(6);\n        \n        const confirmedDaily = e.target.attribute('confirmedDaily');\n        const recoveredDaily = e.target.attribute('recoveredDaily');\n        const deathsDaily = e.target.attribute('deathsDaily');\n        this.setState({\n          confirmedDaily: confirmedDaily,\n          recoveredDaily: recoveredDaily,\n          deathsDaily: deathsDaily,\n          regionName: e.target.attribute('region')\n        });\n      }\n    }\n\n    this.resetClick = () => {\n      this.vectorMap.center(null);\n      this.vectorMap.zoomFactor(null);\n      this.setState({\n        confirmedDaily: this.confirmedDailyWorld,\n        recoveredDaily: this.recoveredDailyWorld,\n        deathsDaily: this.deathsDailyWorld,\n        regionName: worldRegionName\n      });\n    };\n  }\n  \n  render() {\n    return (\n      <ResponsiveBox singleColumnScreen=\"sm\" id=\"responsice-box\" screenByWidth={this.screen} height={() => window.innerHeight}>\n        <Row ratio={3} />\n        <Row ratio={3} screen=\"xs\" />\n        <Row ratio={1} />\n\n        <Col ratio={1} />\n        <Col ratio={1} screen=\"lg\" />\n\n        <ResponsiveBoxItem>\n          <Location row={0} col={0} screen=\"lg\" />\n          <Location row={0} col={0} colspan={2} screen=\"sm\" />\n\n          <div className=\"dx-card responsive-paddings\">\n            <div id=\"region\"><h2 id=\"region-name\">{this.state.regionName}</h2></div>\n            <Button\n              id=\"reset\"\n              text=\"Reset\"\n              onClick={this.resetClick}/>\n            <VectorMap\n              id=\"vector-map\"\n              ref={this.storeVectorMap}\n              bounds={this.bounds}\n              onClick={this.markerClick}>\n              <Layer\n                dataSource={mapsData.world}\n                hoverEnabled={false}>\n              </Layer>\n              <Layer\n                dataSource={this.dataSource}\n                name=\"bubbles\"\n                elementType=\"bubble\"\n                dataField=\"confirmed\"\n                minSize={5}\n                maxSize={100}\n                opacity=\"0.8\"\n                sizeGroups={this.sizeGroups}\n                color=\"#ff3300\">\n                <Label enabled={false}></Label>\n              </Layer>\n              <Layer\n                dataSource={this.dataSource}\n                name=\"bubbles\"\n                elementType=\"bubble\"\n                dataField=\"recovered\"\n                minSize={1}\n                maxSize={100}\n                opacity=\"0.8\"\n                sizeGroups={this.sizeGroups}\n                color=\"#149414\">\n                <Label enabled={false}></Label>\n              </Layer>\n              <Layer\n                dataSource={this.dataSource}\n                name=\"bubbles\"\n                elementType=\"bubble\"\n                dataField=\"deaths\"\n                minSize={1}\n                maxSize={100}\n                opacity=\"0.8\"\n                sizeGroups={this.sizeGroups}\n                color=\"#000000\">\n                <Label enabled={false}></Label>\n              </Layer>\n              <Tooltip enabled={true}\n                customizeTooltip={this.tooltipText} />\n            </VectorMap>\n          </div>\n        </ResponsiveBoxItem>\n\n        <ResponsiveBoxItem>\n          <Location row={0} col={1} screen=\"lg\" />\n          <Location row={1} col={0} colspan={2} screen=\"sm\" />\n\n          <div className=\"dx-card responsive-paddings\">\n            <TabPanel>\n              <TabPanelItem title=\"Confirmed Daily\">\n                <Chart dataSource={this.state.confirmedDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"increase\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"bar\"\n                    color=\"#ff3300\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis>\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n              <TabPanelItem title=\"Recovered Daily\">\n                <Chart dataSource={this.state.recoveredDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"increase\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"bar\"\n                    color=\"#149414\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis>\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n              <TabPanelItem title=\"Deaths Daily\">\n                <Chart dataSource={this.state.deathsDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"increase\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"bar\"\n                    color=\"#000000\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis>\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n            </TabPanel>\n            <TabPanel>\n              <TabPanelItem title=\"Confirmed Linear\">\n                <Chart dataSource={this.state.confirmedDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"value\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"spline\"\n                    color=\"#ff3300\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis type=\"logarithmic\">\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n              <TabPanelItem title=\"Recovered Linear\">\n                <Chart dataSource={this.state.recoveredDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"value\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"spline\"\n                    color=\"#149414\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis type=\"logarithmic\">\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n              <TabPanelItem title=\"Deaths Linear\">\n                <Chart dataSource={this.state.deathsDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"value\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"spline\"\n                    color=\"#000000\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis type=\"logarithmic\">\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n            </TabPanel>\n            <TabPanel>\n              <TabPanelItem title=\"Confirmed Logrithmic\">\n                <Chart dataSource={this.state.confirmedDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"valueLog\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"spline\"\n                    color=\"#ff3300\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis type=\"logarithmic\">\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n              <TabPanelItem title=\"Recovered Logarhitmic\">\n                <Chart dataSource={this.state.recoveredDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"valueLog\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"spline\"\n                    color=\"#149414\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis type=\"logarithmic\">\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n              <TabPanelItem title=\"Deaths Logarithmic\">\n                <Chart dataSource={this.state.deathsDaily}>\n                  <Size height={150} />\n                  <Series\n                    valueField=\"valueLog\"\n                    argumentField=\"date\"\n                    barPadding={0}\n                    type=\"spline\"\n                    color=\"#000000\" />\n                    <Legend visible={false}></Legend>\n                    <ArgumentAxis type=\"logarithmic\">\n                      <TickInterval days={20} /> \n                      <ChartLabel overlappingBehavior={'hide'}></ChartLabel>\n                    </ArgumentAxis>\n                    <ChartTooltip enabled={true} customizeTooltip={this.chartTooltipText} />\n                </Chart>\n              </TabPanelItem>\n            </TabPanel>\n          </div>\n        </ResponsiveBoxItem>\n\n        <ResponsiveBoxItem>\n          <Location row={1} col={0} screen=\"lg\" />\n          <Location row={2} col={0} screen=\"sm\" />\n\n          <div>Datasource: <a href=\"https://github.com/CSSEGISandData/COVID-19\">Johns Hopkins CSSE</a></div>\n        </ResponsiveBoxItem>\n\n      </ResponsiveBox>\n    );\n  }\n}\n\nexport default Covid19Dashboard;","import 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport './App.css'\nimport React from 'react';\nimport Covid19Dashboard from './Components/Covid19Dashboard'\nclass App extends React.Component {\n\n  \n  render() {\n    return (\n      <Covid19Dashboard />\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}